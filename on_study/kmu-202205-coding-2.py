"""
게임 판에 모든 믈록을 제거함녀 성공하는 게임
행(세로) 하나를 제거 시, 그 행에 블록을 제거하고 제거한 블록 위에 쌓여있던 블록은 중력에 의해 1열씩 내려앉는다
열(가로)을 하나 제거 시, 그 열에 있는 불록을 제거한다
판은 정사각형이며, 블럭을 입력 받고 모든 블럭 제거를 위해서 최소 몇 번의 '행동'을 수행해야 하는지 구하시오
입력으로는 첫 번째 줄에 행과 열의 수가 주어지고(1 <= n <= 500000)
두 번째 줄에는 각 열에 쌓여있는 블록의 수가 공백을 기준으로 구분되어 주어진다. 각 열에 쌓여있는 블록의 수는 0 이상 n 이하이다.

예제 2 입력
8
8 3 2 3 7 7 1

greedy 문제, 많은 순으로 행열을 정렬 후에 지우기 시작하면 생각하기 쉽다
--> 행을 몇 개를 지울 것인가, 열을 몇 개를 지울 것인가
어차피 정렬 후에 왼쪽부터 개수 많은 순으로 지우는 것이 이득이며, 행을 지울 때에도 밑에서부터 지우는 것이 이득이다
--> 열을 몇 개를 지울 것인가
--> 열을 히니도 안 지울때 몇 행을 지워야 하는가 : 8번
--> 열을 하나 지울때 몇 행을 지워야 하는가 : 1 + 7 번
--> 열을 둘 지울때 몇 행을 지워야 하는가 : 2 + 7 번
--> 열을 셋 지울때 몇 행을 지워야 하는가 : 3 + 3 번
--> 열을 넷 지울때 몇 행을 지워야 하는가 : 4 + 3 번
--> 열을 다섯개 지울때 몇 행을 지워야 하는가 : 5 + 2 번
"""

import sys

# 8
n = int(sys.stdin.readline())
# 8 3 2 3 7 7 1 2
nums = list(map(int, sys.stdin.readline()))

# 8 7 7 3 3 2 1
nums.sort(reverse=True)

"""
0 + 8
1 + 7
2 + 7
3 + 3
4 + 3
5 + 2
6 + 2
7 + 1
중 최소값 구하기
"""

res = min(i + nums[i] for i in range(n))

print(res)
